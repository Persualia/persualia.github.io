<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ca"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://persualia-plus.github.io/ca/feed.xml" rel="self" type="application/atom+xml" /><link href="https://persualia-plus.github.io/ca/" rel="alternate" type="text/html" hreflang="ca" /><updated>2025-08-19T17:06:45+00:00</updated><id>https://persualia-plus.github.io/ca/feed.xml</id><title type="html">Persualia</title><subtitle>Agencia de marketing conversacional. Copy que conecta y resultados que se pueden medir.</subtitle><entry><title type="html">Bienvenido a Persualia</title><link href="https://persualia-plus.github.io/ca/noticias/general/2025/08/07/bienvenido-a-persualia-plus/" rel="alternate" type="text/html" title="Bienvenido a Persualia" /><published>2025-08-07T10:00:00+00:00</published><updated>2025-08-07T10:00:00+00:00</updated><id>https://persualia-plus.github.io/ca/noticias/general/2025/08/07/bienvenido-a-persualia-plus</id><content type="html" xml:base="https://persualia-plus.github.io/ca/noticias/general/2025/08/07/bienvenido-a-persualia-plus/"><![CDATA[<p>¬°Bienvenido a <strong>Persualia</strong>! Estamos emocionados de presentarte nuestra nueva plataforma web que representa lo mejor de las tecnolog√≠as modernas de desarrollo web.</p>

<h2 id="qu√©-es-persualia">¬øQu√© es Persualia?</h2>

<p>Persualia es una aplicaci√≥n web construida con una stack tecnol√≥gico cuidadosamente seleccionado:</p>

<ul>
  <li><strong>Jekyll</strong>: Para la generaci√≥n de sitios est√°ticos</li>
  <li><strong>React</strong>: Para componentes interactivos</li>
  <li><strong>TailwindCSS v4.1</strong>: Para estilos utilities-first</li>
  <li><strong>DaisyUI 5</strong>: Para componentes predefinidos elegantes</li>
</ul>

<h2 id="caracter√≠sticas-principales">Caracter√≠sticas Principales</h2>

<h3 id="-rendimiento-optimizado">üöÄ Rendimiento Optimizado</h3>

<p>Gracias a Jekyll y la arquitectura de sitio est√°tico, obtenemos tiempos de carga excepcionales y una experiencia de usuario fluida.</p>

<h3 id="-dise√±o-moderno">üé® Dise√±o Moderno</h3>

<p>Con TailwindCSS y DaisyUI, hemos creado una interfaz que es tanto bella como funcional, con soporte para m√∫ltiples temas.</p>

<h3 id="-totalmente-responsive">üì± Totalmente Responsive</h3>

<p>El dise√±o se adapta perfectamente a cualquier dispositivo, desde m√≥viles hasta pantallas de escritorio.</p>

<h3 id="-componentes-interactivos">üîß Componentes Interactivos</h3>

<p>Los componentes React a√±aden interactividad donde la necesitamos, manteniendo la simplicidad donde no.</p>

<h2 id="empezando">Empezando</h2>

<p>Para comenzar a explorar Persualia, puedes:</p>

<ol>
  <li><strong>Navegar</strong>: Usa el men√∫ principal para explorar las diferentes secciones</li>
  <li><strong>Cambiar temas</strong>: Usa el selector de temas en la esquina superior derecha</li>
  <li><strong>Contactar</strong>: Visita nuestra <a href="mailto:mail@persualia.com">p√°gina de contacto</a> para cualquier pregunta</li>
</ol>

<h2 id="lo-que-viene">Lo que viene</h2>

<p>Estamos constantemente trabajando en mejorar la plataforma. Pr√≥ximamente:</p>

<ul>
  <li>M√°s componentes interactivos</li>
  <li>Integraci√≥n con APIs</li>
  <li>Sistema de comentarios</li>
  <li>Y mucho m√°s‚Ä¶</li>
</ul>

<p>¬°Gracias por ser parte de esta aventura!</p>

<hr />

<p><em>¬øTienes alguna pregunta o sugerencia? No dudes en <a href="mailto:mail@persualia.com">contactarnos</a>.</em></p>]]></content><author><name>Equipo Persualia</name></author><category term="noticias" /><category term="general" /><category term="jekyll" /><category term="react" /><category term="tailwindcss" /><category term="daisyui" /><summary type="html"><![CDATA[Te damos la bienvenida a Persualia, una nueva experiencia web que combina las mejores tecnolog√≠as modernas.]]></summary></entry><entry><title type="html">Gu√≠a de Personalizaci√≥n de Temas</title><link href="https://persualia-plus.github.io/ca/tutoriales/dise%C3%B1o/2025/08/06/guia-personalizacion-temas/" rel="alternate" type="text/html" title="Gu√≠a de Personalizaci√≥n de Temas" /><published>2025-08-06T15:30:00+00:00</published><updated>2025-08-06T15:30:00+00:00</updated><id>https://persualia-plus.github.io/ca/tutoriales/dise%C3%B1o/2025/08/06/guia-personalizacion-temas</id><content type="html" xml:base="https://persualia-plus.github.io/ca/tutoriales/dise%C3%B1o/2025/08/06/guia-personalizacion-temas/"><![CDATA[<p>Una de las caracter√≠sticas m√°s poderosas de Persualia es su sistema de temas altamente personalizable. En esta gu√≠a, te mostraremos c√≥mo sacar el m√°ximo provecho de esta funcionalidad.</p>

<h2 id="sistema-de-temas">Sistema de Temas</h2>

<p>Persualia utiliza <strong>DaisyUI 5</strong> para su sistema de temas, lo que nos proporciona:</p>

<ul>
  <li>M√°s de 30 temas predefinidos</li>
  <li>F√°cil personalizaci√≥n</li>
  <li>Cambio din√°mico de temas</li>
  <li>Persistencia en localStorage</li>
</ul>

<h2 id="temas-disponibles">Temas Disponibles</h2>

<h3 id="temas-principales">Temas Principales</h3>

<ul>
  <li><strong>Persualia</strong>: Nuestro tema personalizado con colores corporativos</li>
  <li><strong>Light</strong>: Tema claro y minimalista</li>
  <li><strong>Dark</strong>: Tema oscuro para mejor experiencia nocturna</li>
  <li><strong>Corporate</strong>: Dise√±o profesional para uso empresarial</li>
</ul>

<h3 id="temas-creativos">Temas Creativos</h3>

<ul>
  <li><strong>Synthwave</strong>: Est√©tica retro-futurista</li>
  <li><strong>Cyberpunk</strong>: Dise√±o futurista y vibrante</li>
  <li><strong>Cupcake</strong>: Colores suaves y pasteles</li>
  <li><strong>Halloween</strong>: Tema tem√°tico naranja y negro</li>
</ul>

<h2 id="c√≥mo-cambiar-temas">C√≥mo Cambiar Temas</h2>

<h3 id="m√©todo-1-selector-de-temas">M√©todo 1: Selector de Temas</h3>

<ol>
  <li>Busca el icono de sol/luna en la barra de navegaci√≥n</li>
  <li>Haz clic para abrir el men√∫ de temas</li>
  <li>Selecciona tu tema favorito</li>
  <li>¬°El cambio es instant√°neo!</li>
</ol>

<h3 id="m√©todo-2-program√°ticamente">M√©todo 2: Program√°ticamente</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Cambiar tema mediante JavaScript</span>
<span class="kd">function</span> <span class="nf">setTheme</span><span class="p">(</span><span class="nx">themeName</span><span class="p">)</span> <span class="p">{</span>
  <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nf">setAttribute</span><span class="p">(</span><span class="dl">'</span><span class="s1">data-theme</span><span class="dl">'</span><span class="p">,</span> <span class="nx">themeName</span><span class="p">);</span>
  <span class="nx">localStorage</span><span class="p">.</span><span class="nf">setItem</span><span class="p">(</span><span class="dl">'</span><span class="s1">theme</span><span class="dl">'</span><span class="p">,</span> <span class="nx">themeName</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Ejemplos</span>
<span class="nf">setTheme</span><span class="p">(</span><span class="dl">'</span><span class="s1">dark</span><span class="dl">'</span><span class="p">);</span>
<span class="nf">setTheme</span><span class="p">(</span><span class="dl">'</span><span class="s1">cyberpunk</span><span class="dl">'</span><span class="p">);</span>
<span class="nf">setTheme</span><span class="p">(</span><span class="dl">'</span><span class="s1">persualia</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="personalizaci√≥n-avanzada">Personalizaci√≥n Avanzada</h2>

<h3 id="creando-tu-propio-tema">Creando tu Propio Tema</h3>

<p>Puedes crear temas personalizados modificando el archivo <code class="language-plaintext highlighter-rouge">tailwind.config.js</code>:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">daisyui</span><span class="p">:</span> <span class="p">{</span>
  <span class="nl">themes</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="na">miTemaPersonalizado</span><span class="p">:</span> <span class="p">{</span>
        <span class="dl">"</span><span class="s2">primary</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#1e40af</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">secondary</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#7c3aed</span><span class="dl">"</span><span class="p">,</span> 
        <span class="dl">"</span><span class="s2">accent</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#f59e0b</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">neutral</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#3d4451</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">base-100</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#ffffff</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">info</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#3abff8</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">success</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#36d399</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">warning</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#fbbd23</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">error</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#f87272</span><span class="dl">"</span><span class="p">,</span>
      <span class="p">},</span>
    <span class="p">},</span>
    <span class="c1">// otros temas...</span>
  <span class="p">],</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="variables-css-personalizadas">Variables CSS Personalizadas</h3>

<p>Tambi√©n puedes usar variables CSS para personalizaci√≥n en tiempo real:</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">:root</span> <span class="p">{</span>
  <span class="py">--primary-color</span><span class="p">:</span> <span class="nx">#0ea5e9</span><span class="p">;</span>
  <span class="py">--secondary-color</span><span class="p">:</span> <span class="nx">#7c3aed</span><span class="p">;</span>
  <span class="py">--accent-color</span><span class="p">:</span> <span class="nx">#f59e0b</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.mi-componente</span> <span class="p">{</span>
  <span class="nl">background</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="l">--primary-color</span><span class="p">);</span>
  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="nf">var</span><span class="p">(</span><span class="l">--secondary-color</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="mejores-pr√°cticas">Mejores Pr√°cticas</h2>

<h3 id="accesibilidad">Accesibilidad</h3>

<ul>
  <li>Siempre verifica el contraste de colores</li>
  <li>Prueba tus temas con usuarios con discapacidades visuales</li>
  <li>Considera la legibilidad en diferentes condiciones de luz</li>
</ul>

<h3 id="rendimiento">Rendimiento</h3>

<ul>
  <li>Evita animaciones excesivas en los cambios de tema</li>
  <li>Optimiza las transiciones CSS</li>
  <li>Mant√©n los temas ligeros en tama√±o</li>
</ul>

<h3 id="experiencia-de-usuario">Experiencia de Usuario</h3>

<ul>
  <li>Proporciona una previsualizaci√≥n antes de aplicar el tema</li>
  <li>Mant√©n la consistencia en la iconograf√≠a</li>
  <li>Ofrece temas para diferentes momentos del d√≠a</li>
</ul>

<h2 id="pr√≥ximas-funcionalidades">Pr√≥ximas Funcionalidades</h2>

<p>Estamos trabajando en:</p>

<ul>
  <li><strong>Tema autom√°tico</strong>: Cambio basado en la hora del d√≠a</li>
  <li><strong>Temas por secci√≥n</strong>: Diferentes temas para diferentes √°reas del sitio</li>
  <li><strong>Editor visual</strong>: Herramienta para crear temas sin c√≥digo</li>
  <li><strong>Temas de temporada</strong>: Cambios autom√°ticos seg√∫n festividades</li>
</ul>

<h2 id="conclusi√≥n">Conclusi√≥n</h2>

<p>El sistema de temas de Persualia te ofrece flexibilidad total para personalizar tu experiencia. Experimenta con diferentes combinaciones y encuentra la que mejor se adapte a tu estilo.</p>

<p>¬øHas creado un tema personalizado incre√≠ble? ¬°<a href="mailto:mail@persualia.com">Comp√°rtelo con nosotros</a>!</p>

<hr />

<p><em>¬øNecesitas ayuda con la personalizaci√≥n? Consulta nuestra <a href="/docs/">documentaci√≥n completa</a> o <a href="mailto:mail@persualia.com">cont√°ctanos</a>.</em></p>]]></content><author><name>Equipo de Dise√±o</name></author><category term="tutoriales" /><category term="dise√±o" /><category term="daisyui" /><category term="temas" /><category term="personalizaci√≥n" /><category term="css" /><summary type="html"><![CDATA[Aprende c√≥mo personalizar y crear tus propios temas en Persualia usando DaisyUI.]]></summary></entry><entry><title type="html">Componentes React Integrados</title><link href="https://persualia-plus.github.io/ca/desarrollo/react/2025/08/05/componentes-react-integrados/" rel="alternate" type="text/html" title="Componentes React Integrados" /><published>2025-08-05T12:00:00+00:00</published><updated>2025-08-05T12:00:00+00:00</updated><id>https://persualia-plus.github.io/ca/desarrollo/react/2025/08/05/componentes-react-integrados</id><content type="html" xml:base="https://persualia-plus.github.io/ca/desarrollo/react/2025/08/05/componentes-react-integrados/"><![CDATA[<p>Persualia combina la potencia de Jekyll con la interactividad de React. En este art√≠culo, exploraremos los componentes React que hemos integrado y c√≥mo puedes usarlos.</p>

<h2 id="arquitectura-h√≠brida">Arquitectura H√≠brida</h2>

<p>Nuestra aproximaci√≥n h√≠brida nos permite:</p>

<ul>
  <li><strong>Sitio est√°tico r√°pido</strong>: Jekyll genera p√°ginas est√°ticas optimizadas</li>
  <li><strong>Interactividad selectiva</strong>: React a√±ade funcionalidad donde la necesitamos</li>
  <li><strong>SEO optimizado</strong>: El contenido se renderiza en el servidor</li>
  <li><strong>Hidrataci√≥n progresiva</strong>: Los componentes React se activan cuando es necesario</li>
</ul>

<h2 id="componentes-disponibles">Componentes Disponibles</h2>

<h3 id="1-themeswitcher">1. ThemeSwitcher</h3>

<p>El selector de temas es uno de nuestros componentes React m√°s √∫tiles:</p>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">ThemeSwitcher</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">[</span><span class="nx">currentTheme</span><span class="p">,</span> <span class="nx">setCurrentTheme</span><span class="p">]</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nf">useState</span><span class="p">(</span><span class="dl">'</span><span class="s1">persualia</span><span class="dl">'</span><span class="p">);</span>
  
  <span class="kd">const</span> <span class="nx">handleThemeChange</span> <span class="o">=</span> <span class="p">(</span><span class="nx">theme</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nf">setCurrentTheme</span><span class="p">(</span><span class="nx">theme</span><span class="p">);</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nf">setAttribute</span><span class="p">(</span><span class="dl">'</span><span class="s1">data-theme</span><span class="dl">'</span><span class="p">,</span> <span class="nx">theme</span><span class="p">);</span>
    <span class="nx">localStorage</span><span class="p">.</span><span class="nf">setItem</span><span class="p">(</span><span class="dl">'</span><span class="s1">theme</span><span class="dl">'</span><span class="p">,</span> <span class="nx">theme</span><span class="p">);</span>
  <span class="p">};</span>
  
  <span class="c1">// ... resto del componente</span>
<span class="p">};</span>
</code></pre></div></div>

<p><strong>Caracter√≠sticas:</strong></p>
<ul>
  <li>Persistencia en localStorage</li>
  <li>Cambio instant√°neo de tema</li>
  <li>Lista completa de temas disponibles</li>
  <li>Interfaz intuitiva con dropdown</li>
</ul>

<h3 id="2-herosection">2. HeroSection</h3>

<p>Componente para crear secciones hero din√°micas:</p>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">HeroSection</span> <span class="o">=</span> <span class="p">({</span> <span class="nx">title</span><span class="p">,</span> <span class="nx">subtitle</span><span class="p">,</span> <span class="nx">buttonText</span><span class="p">,</span> <span class="nx">buttonLink</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return </span><span class="p">(</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"hero min-h-screen bg-gradient-to-br from-base-100 to-base-200"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"hero-content text-center"</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"max-w-md"</span><span class="p">&gt;</span>
          <span class="p">&lt;</span><span class="nt">h1</span> <span class="na">className</span><span class="p">=</span><span class="s">"text-5xl font-bold text-gradient"</span><span class="p">&gt;</span><span class="si">{</span><span class="nx">title</span><span class="si">}</span><span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
          <span class="p">&lt;</span><span class="nt">p</span> <span class="na">className</span><span class="p">=</span><span class="s">"py-6 text-lg"</span><span class="p">&gt;</span><span class="si">{</span><span class="nx">subtitle</span><span class="si">}</span><span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
          <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="p">=</span><span class="si">{</span><span class="nx">buttonLink</span><span class="si">}</span> <span class="na">className</span><span class="p">=</span><span class="s">"btn-persualia btn-lg"</span><span class="p">&gt;</span>
            <span class="si">{</span><span class="nx">buttonText</span><span class="si">}</span>
          <span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p><strong>Uso en HTML:</strong></p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"hero-section"</span> 
     <span class="na">data-title=</span><span class="s">"Tu T√≠tulo"</span>
     <span class="na">data-subtitle=</span><span class="s">"Tu Subt√≠tulo"</span>
     <span class="na">data-button-text=</span><span class="s">"Acci√≥n"</span>
     <span class="na">data-button-link=</span><span class="s">"/destino"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<h3 id="3-featurecard">3. FeatureCard</h3>

<p>Tarjetas de caracter√≠sticas reutilizables:</p>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">FeatureCard</span> <span class="o">=</span> <span class="p">({</span> <span class="nx">icon</span><span class="p">,</span> <span class="nx">title</span><span class="p">,</span> <span class="nx">description</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return </span><span class="p">(</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"card-persualia"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"card-body items-center text-center"</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"text-4xl mb-4"</span><span class="p">&gt;</span><span class="si">{</span><span class="nx">icon</span><span class="si">}</span><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">h2</span> <span class="na">className</span><span class="p">=</span><span class="s">"card-title text-2xl mb-2"</span><span class="p">&gt;</span><span class="si">{</span><span class="nx">title</span><span class="si">}</span><span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">p</span> <span class="na">className</span><span class="p">=</span><span class="s">"text-base-content/70"</span><span class="p">&gt;</span><span class="si">{</span><span class="nx">description</span><span class="si">}</span><span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<h3 id="4-contactform">4. ContactForm</h3>

<p>Formulario de contacto con validaci√≥n:</p>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">ContactForm</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">[</span><span class="nx">formData</span><span class="p">,</span> <span class="nx">setFormData</span><span class="p">]</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nf">useState</span><span class="p">({</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span>
    <span class="na">email</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span>
    <span class="na">message</span><span class="p">:</span> <span class="dl">''</span>
  <span class="p">});</span>
  
  <span class="kd">const</span> <span class="nx">handleSubmit</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">e</span><span class="p">.</span><span class="nf">preventDefault</span><span class="p">();</span>
    <span class="c1">// L√≥gica de env√≠o</span>
  <span class="p">};</span>
  
  <span class="c1">// ... resto del componente</span>
<span class="p">};</span>
</code></pre></div></div>

<p><strong>Caracter√≠sticas:</strong></p>
<ul>
  <li>Validaci√≥n en tiempo real</li>
  <li>Estado de formulario manejado</li>
  <li>Integraci√≥n con APIs externas (pr√≥ximamente)</li>
  <li>Feedback visual para el usuario</li>
</ul>

<h2 id="c√≥mo-a√±adir-nuevos-componentes">C√≥mo A√±adir Nuevos Componentes</h2>

<h3 id="paso-1-definir-el-componente">Paso 1: Definir el Componente</h3>

<p>Agrega tu componente en <code class="language-plaintext highlighter-rouge">_includes/react-components.html</code>:</p>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">MiNuevoComponente</span> <span class="o">=</span> <span class="p">({</span> <span class="nx">prop1</span><span class="p">,</span> <span class="nx">prop2</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">[</span><span class="nx">estado</span><span class="p">,</span> <span class="nx">setEstado</span><span class="p">]</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nf">useState</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span>
  
  <span class="k">return </span><span class="p">(</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"mi-componente"</span><span class="p">&gt;</span>
      <span class="si">{</span><span class="cm">/* Tu JSX aqu√≠ */</span><span class="si">}</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<h3 id="paso-2-registrar-el-componente">Paso 2: Registrar el Componente</h3>

<p>A√±ade el c√≥digo de renderizado:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">document</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">DOMContentLoaded</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">container</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">mi-componente</span><span class="dl">'</span><span class="p">);</span>
  <span class="k">if </span><span class="p">(</span><span class="nx">container</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">prop1</span> <span class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nf">getAttribute</span><span class="p">(</span><span class="dl">'</span><span class="s1">data-prop1</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">const</span> <span class="nx">prop2</span> <span class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nf">getAttribute</span><span class="p">(</span><span class="dl">'</span><span class="s1">data-prop2</span><span class="dl">'</span><span class="p">);</span>
    
    <span class="nx">ReactDOM</span><span class="p">.</span><span class="nf">render</span><span class="p">(</span>
      <span class="o">&lt;</span><span class="nx">MiNuevoComponente</span> <span class="nx">prop1</span><span class="o">=</span><span class="p">{</span><span class="nx">prop1</span><span class="p">}</span> <span class="nx">prop2</span><span class="o">=</span><span class="p">{</span><span class="nx">prop2</span><span class="p">}</span> <span class="sr">/&gt;,</span><span class="err"> 
</span>      <span class="nx">container</span>
    <span class="p">);</span>
  <span class="p">}</span>
<span class="p">});</span>
</code></pre></div></div>

<h3 id="paso-3-usar-en-html">Paso 3: Usar en HTML</h3>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"mi-componente"</span> 
     <span class="na">data-prop1=</span><span class="s">"valor1"</span> 
     <span class="na">data-prop2=</span><span class="s">"valor2"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<h2 id="mejores-pr√°cticas">Mejores Pr√°cticas</h2>

<h3 id="rendimiento">Rendimiento</h3>

<ul>
  <li><strong>Carga bajo demanda</strong>: Solo carga React cuando hay componentes que lo necesiten</li>
  <li><strong>Componentes ligeros</strong>: Mant√©n los componentes simples y enfocados</li>
  <li><strong>Evita re-renders</strong>: Usa <code class="language-plaintext highlighter-rouge">React.memo</code> cuando sea apropiado</li>
</ul>

<h3 id="mantenibilidad">Mantenibilidad</h3>

<ul>
  <li><strong>Componentes puros</strong>: Prefiere componentes funcionales</li>
  <li><strong>Props tipadas</strong>: Usa PropTypes o TypeScript para validaci√≥n</li>
  <li><strong>Documentaci√≥n clara</strong>: Comenta el prop√≥sito de cada componente</li>
</ul>

<h3 id="integraci√≥n">Integraci√≥n</h3>

<ul>
  <li><strong>Datos del servidor</strong>: Usa data attributes para pasar datos desde Jekyll</li>
  <li><strong>Estado global m√≠nimo</strong>: Evita state management complejo</li>
  <li><strong>Fallbacks</strong>: Proporciona alternativas si JavaScript est√° deshabilitado</li>
</ul>

<h2 id="roadmap-de-componentes">Roadmap de Componentes</h2>

<h3 id="pr√≥ximamente">Pr√≥ximamente</h3>

<ul>
  <li><strong>DataTable</strong>: Tabla con ordenamiento y filtrado</li>
  <li><strong>Modal</strong>: Sistema de modales reutilizable</li>
  <li><strong>Carousel</strong>: Carrusel de im√°genes/contenido</li>
  <li><strong>Toast</strong>: Notificaciones no intrusivas</li>
  <li><strong>Chart</strong>: Gr√°ficos interactivos con Chart.js</li>
</ul>

<h3 id="en-consideraci√≥n">En Consideraci√≥n</h3>

<ul>
  <li><strong>Calendar</strong>: Componente de calendario</li>
  <li><strong>FileUpload</strong>: Subida de archivos con drag &amp; drop</li>
  <li><strong>RichTextEditor</strong>: Editor de texto enriquecido</li>
  <li><strong>SearchBox</strong>: B√∫squeda en tiempo real</li>
</ul>

<h2 id="conclusi√≥n">Conclusi√≥n</h2>

<p>Los componentes React en Persualia proporcionan la interactividad perfecta sin sacrificar el rendimiento. Esta arquitectura h√≠brida es ideal para sitios que necesitan ser r√°pidos pero tambi√©n interactivos.</p>

<p>¬øTienes ideas para nuevos componentes? ¬°<a href="mailto:mail@persualia.com">Comp√°rtelas con nosotros</a>!</p>

<hr />

<p><em>¬øQuieres contribuir al desarrollo? Revisa nuestro <a href="https://github.com/albertperez/web-persualia-plus">repositorio en GitHub</a>.</em></p>]]></content><author><name>Equipo de Desarrollo</name></author><category term="desarrollo" /><category term="react" /><category term="react" /><category term="componentes" /><category term="javascript" /><category term="interactividad" /><summary type="html"><![CDATA[Descubre los componentes React integrados en Persualia y c√≥mo utilizarlos en tus proyectos.]]></summary></entry></feed>